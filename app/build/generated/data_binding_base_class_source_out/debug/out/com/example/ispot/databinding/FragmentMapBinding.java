// Generated by view binder compiler. Do not edit!
package com.example.ispot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.amap.api.maps.MapView;
import com.example.ispot.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardSearch;

  @NonNull
  public final Chip chipActivities;

  @NonNull
  public final ChipGroup chipGroupFilter;

  @NonNull
  public final Chip chipPeople;

  @NonNull
  public final Chip chipSpots;

  @NonNull
  public final FloatingActionButton fabMyLocation;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final SearchView searchView;

  private FragmentMapBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardSearch, @NonNull Chip chipActivities,
      @NonNull ChipGroup chipGroupFilter, @NonNull Chip chipPeople, @NonNull Chip chipSpots,
      @NonNull FloatingActionButton fabMyLocation, @NonNull MapView mapView,
      @NonNull SearchView searchView) {
    this.rootView = rootView;
    this.cardSearch = cardSearch;
    this.chipActivities = chipActivities;
    this.chipGroupFilter = chipGroupFilter;
    this.chipPeople = chipPeople;
    this.chipSpots = chipSpots;
    this.fabMyLocation = fabMyLocation;
    this.mapView = mapView;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_search;
      MaterialCardView cardSearch = ViewBindings.findChildViewById(rootView, id);
      if (cardSearch == null) {
        break missingId;
      }

      id = R.id.chip_activities;
      Chip chipActivities = ViewBindings.findChildViewById(rootView, id);
      if (chipActivities == null) {
        break missingId;
      }

      id = R.id.chip_group_filter;
      ChipGroup chipGroupFilter = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFilter == null) {
        break missingId;
      }

      id = R.id.chip_people;
      Chip chipPeople = ViewBindings.findChildViewById(rootView, id);
      if (chipPeople == null) {
        break missingId;
      }

      id = R.id.chip_spots;
      Chip chipSpots = ViewBindings.findChildViewById(rootView, id);
      if (chipSpots == null) {
        break missingId;
      }

      id = R.id.fab_my_location;
      FloatingActionButton fabMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (fabMyLocation == null) {
        break missingId;
      }

      id = R.id.map_view;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      return new FragmentMapBinding((ConstraintLayout) rootView, cardSearch, chipActivities,
          chipGroupFilter, chipPeople, chipSpots, fabMyLocation, mapView, searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
